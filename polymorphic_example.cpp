/*
    * 多态原理
    * 动态联编
    * 虚函数表
    *   1.每一个有虚函数的类都有一个虚函数表（编译器生成）与之对应
    *   2.每一个有虚函数的类的对象的内存空间内都存着指向虚函数表的指针(这就是为什么会多4Bytes)
    *   3.虚函数表里面放的是对应类里面所有虚函数的地址
    *   4.多态的函数调用语句被编译成一系列 根据基类指针所指向的 对象中 存放的虚函数表
    *     的地址，在虚函数表中查询虚函数地址，并调用虚函数指令
    * 多态的程序在时间和空间上都有额外开销
*/